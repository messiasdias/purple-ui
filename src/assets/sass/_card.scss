.card {
    @extend .shadow-radius;
    background-color: $white !important;
    min-width: 150px;
    min-height: 200px ;
    position: relative;
    overflow: hidden;
    padding: 0 ;
    margin: 10px;
    background-color: $light !important;

    .actions {
        @extend .flex-row-center;
        padding: 5px;
        a{
            @extend .flex-row-center;
            color: $dark;
            font-size: 14px;
            font-weight: lighter !important;
            margin: auto 10px ;

            &:hover{
                transform: translateY(-2px);
            }
        }

        @each $name , $color, $cl in $color_map {
            a.#{name}{
                &  > svg, & {
                    color: $color;
                }
            }
        }
        
    }

    &-header,  &-body,  &-footer {
        position: relative;
        width: 100%;
        padding: 10px;
        background-color: $white;
        color: $dark ;
    }

    &-header {
       @extend .flex-row-center;
       border-bottom: solid 1px $black2;
       justify-content: space-between !important;
       padding: 20px;
    }

    &-body {
        @extend .flex-col-center;
        min-height: 80px;
        padding: 28px 10px;

        div[class^=container]{
            margin-bottom: 20px;
            h1,h2,h3{
                margin-bottom: 10px;
                font-weight: 600;
            }
        }
    }


    &-footer {
        @extend .flex-col-center;
        border-top: solid 1px $black2; 
        padding: 10px 0px !important;
    }


    //.card-inline
    &-inline {
        @extend .flex-col-center;
        position: relative !important;
        border: solid 1px $black2;
        border-radius: 10px;
        min-height: 60px;
        width: 100%;
        padding: 20px 0px;
        margin-bottom: 10px;

        @media screen and (min-width: $lg) {
            flex-direction: row !important;
        }

        @each $name , $bg, $cl in $color_map  {
            &-#{$name}  {
                @extend .card-inline;
                & > span, & > .line {
                    background: $bg !important;
                }
            }
        }

        & > span, & > .line, & > .topline{
            max-width:  calc( 100%  - 10px);
            width: 100%;
            background: $dark;
            height: 4px;
            position: absolute;
            top: 5px;
            left: 5px;
            border-radius: 10px;
            transition-delay: .3s;
            transition: width ease-in-out .8s ;
            animation: elastic ease-in-out .8s alternate;
            animation-iteration-count: 1;
            animation-delay: .1s;
        }

        .left, .right {
            @extend .col-12, .col-lg-6, .flex-row-center;
            justify-content: flex-start !important;
            flex-wrap: wrap !important;

            .actions {
                @extend .flex-row-center;

                &  > a {
                    color: $dark;
                    text-align: left !important;
                    &:hover{
                        color: rgba($dark, .7);
                    }

                    & > span[class^=tag]{
                        background: none !important;
                        color: $dark !important;
                        margin-left: 7px;
                        animation: none !important;
                    }
                }

                &  > span {
                    @extend .avatar-badge, .active;
                    background: rgba($dark, .5) !important;
                    box-shadow: none !important;
                    small > a {color: $dark !important;}
                }
            }
        }

        .left{
            justify-content: flex-start !important;
            @media screen and (max-width: $lg) {
                justify-content: space-between !important;
            }

            a{
                text-decoration: none;
                font-weight: bolder;
                font-size: 1rem;

                &:hover{
                    color: $primary;
                    cursor: pointer;
                }
            }

            .actions {
                margin-left: 20px;
                @media screen and (max-width: $lg) {margin: 0 !important;}
            }
        }

        .right{
            @media screen and (min-width: $lg) {
                justify-content: flex-end !important;
            }

            .actions {
               // margin-left: 20px;
            }
        }

    }

    &.projects {
        .card-header{
            border-color: transparent;
        }
    
        .card-body{
            img[class=avatar-lg], small, & > .actions {
                margin-bottom: 10px!important;
            }
            & .actions{
    
                a { margin:  2px !important;}
    
                &:hover{
    
                    a{transform: none;}
    
                    & > a:first-child{
                        transform: translateX(-10px);
                        transition: transform ease-in-out  .3s;
                    }
    
                    & > a:last-child{
                        transform: translateX(10px);
                        transition: transform ease-in-out  .3s;
                    }
                }
            } 
        }
    
        .card-footer {
            .actions {
                width: 100%;
                height: 100%;
                padding: 10px;
                justify-content: space-evenly !important;
                a{font-size: 16px;}
            }
        }
    
    }
    
    
    &.tasks {
        position: relative;

        .card-header{
            border-color: $black2;
        }

        .card-body {
            align-items: flex-start !important;

            .card-inline{
                &:hover{
                    cursor: grab;
                    @extend .shadow;
                }
            }
        }
    
        .card-footer{
            border-color: transparent;
        }
    }

}
